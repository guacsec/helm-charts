# Copyright Kusari, Inc. and contributors
# Licensed under the MIT license. See LICENSE file in the project root for details.
{{- if .Values.guac.sampleData.ingest }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.guac.sampleData.jobName }}
  labels:
    {{- include "guac.labels" . | nindent 4 }}
    app.kubernetes.io/name: {{ .Values.guac.sampleData.jobName }}
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    # "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
    "helm.sh/hook-weight": "10"
spec:
  backoffLimit: 5
  template:
    metadata:
      labels:
        {{- include "guac.labels" . | nindent 8 }}
        app.kubernetes.io/name: {{ .Values.guac.sampleData.jobName }}
    spec:
      containers:
      - name: data-ingestor
        # image: "ubuntu:22.04"
        {{- if .Values.guac.guacImage.digest }}
        image: "{{ .Values.guac.guacImage.repository }}@{{ .Values.guac.guacImage.digest }}"
        {{- else }}
        image: "{{ .Values.guac.guacImage.repository }}:{{ .Values.guac.guacImage.tag | default .Chart.AppVersion}}"
        {{- end }}
        imagePullPolicy: "{{ .Values.guac.guacImage.pullPolicy }}" 
        command: ['sh', '-c', '/tmp/guac/ingest-guac-data.sh ingest-data']
        workingDir: {{ .Values.guac.workingDir }}
{{- if or .Values.guac.common.env .Values.guac.sampleData.env }}
        env:
        {{- range $key, $value := .Values.guac.common.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}  
        {{- range $key, $value := .Values.guac.sampleData.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}  
{{- end }}
        volumeMounts:
          - name: guac-config
            mountPath: {{ .Values.guac.guacImage.workingDir }}
            readOnly: true
          - name: ingest-guac-data
            mountPath: /tmp/guac
     
     
      # - name: data-preper
      #   # image: "ubuntu:22.04"
      #   {{- if .Values.guac.guacImage.digest }}
      #   image: "{{ .Values.guac.guacImage.repository }}@{{ .Values.guac.guacImage.digest }}"
      #   {{- else }}
      #   image: "{{ .Values.guac.guacImage.repository }}:{{ .Values.guac.guacImage.tag | default .Chart.AppVersion}}"
      #   {{- end }}
      #   command: ['sh', '-c', '/tmp/guac/ingest-guac-data.sh prep-data']
      #   workingDir: {{ .Values.guac.guacImage.workingDir }}
      #   volumeMounts:
      #     - name: guac-config
      #       mountPath: {{ .Values.guac.guacImage.workingDir }}
      #       readOnly: true
      #     - name: ingest-guac-data
      #       mountPath: /tmp/guac
      #     - name: shared-data
      #       mountPath: /shared-data
      restartPolicy: OnFailure
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      volumes:
        - name: guac-config
          configMap:
            name: guac-cm
        - name: ingest-guac-data
          configMap:
            name: {{ .Values.guac.sampleData.jobName }}
            defaultMode: 0755
        - name: shared-data
          emptyDir: {}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.guac.sampleData.jobName }}
  labels:
    app.kubernetes.io/name: {{ .Values.guac.sampleData.jobName }}
    app.kubernetes.io/component: {{ .Values.guac.sampleData.jobName }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/part-of: "guac"
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
data:
  ingest-guac-data.sh: |-
    #!/usr/bin/env bash
    set -e

    # SHARED_DATA=/shared-data
    SHARED_DATA=/guac-data/docs
    INDICATOR_FILE=${SHARED_DATA}/done_loading_data
    GUAC_DATA_REPO=https://github.com/guacsec/guac-data.git

    case "$1" in

    prep-data)  echo  "Preparing sample data"
        # apt-get update && apt-get install -y git
        # git clone ${GUAC_DATA_REPO} ${SHARED_DATA}/guac-data
        # touch ${INDICATOR_FILE}
        ;;

    ingest-data)  echo "Ingesting sample data"
        export GUACSEC_HOME="/guac"
        cd ${GUACSEC_HOME}
        echo running guaccollect...
        time /opt/guac/guaccollect files --service-poll=false ${SHARED_DATA}

        rm ${INDICATOR_FILE}
        ;;

    *) echo "$1 is not supported"
        ;;
    esac

{{- end }}
